// Code generated by protoc-gen-go. DO NOT EDIT.
// source: hello.proto

package hello

import (
	context "context"
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type SalamRequest struct {
	Nama                 string   `protobuf:"bytes,1,opt,name=nama,proto3" json:"nama,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *SalamRequest) Reset()         { *m = SalamRequest{} }
func (m *SalamRequest) String() string { return proto.CompactTextString(m) }
func (*SalamRequest) ProtoMessage()    {}
func (*SalamRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_61ef911816e0a8ce, []int{0}
}

func (m *SalamRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SalamRequest.Unmarshal(m, b)
}
func (m *SalamRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SalamRequest.Marshal(b, m, deterministic)
}
func (m *SalamRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SalamRequest.Merge(m, src)
}
func (m *SalamRequest) XXX_Size() int {
	return xxx_messageInfo_SalamRequest.Size(m)
}
func (m *SalamRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_SalamRequest.DiscardUnknown(m)
}

var xxx_messageInfo_SalamRequest proto.InternalMessageInfo

func (m *SalamRequest) GetNama() string {
	if m != nil {
		return m.Nama
	}
	return ""
}

type SalamResponse struct {
	Pesan                string   `protobuf:"bytes,1,opt,name=pesan,proto3" json:"pesan,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *SalamResponse) Reset()         { *m = SalamResponse{} }
func (m *SalamResponse) String() string { return proto.CompactTextString(m) }
func (*SalamResponse) ProtoMessage()    {}
func (*SalamResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_61ef911816e0a8ce, []int{1}
}

func (m *SalamResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SalamResponse.Unmarshal(m, b)
}
func (m *SalamResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SalamResponse.Marshal(b, m, deterministic)
}
func (m *SalamResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SalamResponse.Merge(m, src)
}
func (m *SalamResponse) XXX_Size() int {
	return xxx_messageInfo_SalamResponse.Size(m)
}
func (m *SalamResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_SalamResponse.DiscardUnknown(m)
}

var xxx_messageInfo_SalamResponse proto.InternalMessageInfo

func (m *SalamResponse) GetPesan() string {
	if m != nil {
		return m.Pesan
	}
	return ""
}

func init() {
	proto.RegisterType((*SalamRequest)(nil), "SalamRequest")
	proto.RegisterType((*SalamResponse)(nil), "SalamResponse")
}

func init() {
	proto.RegisterFile("hello.proto", fileDescriptor_61ef911816e0a8ce)
}

var fileDescriptor_61ef911816e0a8ce = []byte{
	// 129 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xe2, 0xe2, 0xce, 0x48, 0xcd, 0xc9,
	0xc9, 0xd7, 0x2b, 0x28, 0xca, 0x2f, 0xc9, 0x57, 0x52, 0xe2, 0xe2, 0x09, 0x4e, 0xcc, 0x49, 0xcc,
	0x0d, 0x4a, 0x2d, 0x2c, 0x4d, 0x2d, 0x2e, 0x11, 0x12, 0xe2, 0x62, 0xc9, 0x4b, 0xcc, 0x4d, 0x94,
	0x60, 0x54, 0x60, 0xd4, 0xe0, 0x0c, 0x02, 0xb3, 0x95, 0x54, 0xb9, 0x78, 0xa1, 0x6a, 0x8a, 0x0b,
	0xf2, 0xf3, 0x8a, 0x53, 0x85, 0x44, 0xb8, 0x58, 0x0b, 0x52, 0x8b, 0x13, 0xf3, 0xa0, 0xaa, 0x20,
	0x1c, 0x23, 0x53, 0xa8, 0x51, 0xc1, 0xa9, 0x45, 0x65, 0x99, 0xc9, 0xa9, 0x42, 0xaa, 0x5c, 0x2c,
	0xc1, 0x89, 0x05, 0x89, 0x42, 0xbc, 0x7a, 0xc8, 0x36, 0x48, 0xf1, 0xe9, 0xa1, 0x18, 0x96, 0xc4,
	0x06, 0x76, 0x88, 0x31, 0x20, 0x00, 0x00, 0xff, 0xff, 0xc1, 0x05, 0x48, 0xaf, 0x97, 0x00, 0x00,
	0x00,
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConnInterface

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion6

// SalamServiceClient is the client API for SalamService service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type SalamServiceClient interface {
	Sapa(ctx context.Context, in *SalamRequest, opts ...grpc.CallOption) (*SalamResponse, error)
}

type salamServiceClient struct {
	cc grpc.ClientConnInterface
}

func NewSalamServiceClient(cc grpc.ClientConnInterface) SalamServiceClient {
	return &salamServiceClient{cc}
}

func (c *salamServiceClient) Sapa(ctx context.Context, in *SalamRequest, opts ...grpc.CallOption) (*SalamResponse, error) {
	out := new(SalamResponse)
	err := c.cc.Invoke(ctx, "/SalamService/Sapa", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// SalamServiceServer is the server API for SalamService service.
type SalamServiceServer interface {
	Sapa(context.Context, *SalamRequest) (*SalamResponse, error)
}

// UnimplementedSalamServiceServer can be embedded to have forward compatible implementations.
type UnimplementedSalamServiceServer struct {
}

func (*UnimplementedSalamServiceServer) Sapa(ctx context.Context, req *SalamRequest) (*SalamResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Sapa not implemented")
}

func RegisterSalamServiceServer(s *grpc.Server, srv SalamServiceServer) {
	s.RegisterService(&_SalamService_serviceDesc, srv)
}

func _SalamService_Sapa_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(SalamRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(SalamServiceServer).Sapa(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/SalamService/Sapa",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(SalamServiceServer).Sapa(ctx, req.(*SalamRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _SalamService_serviceDesc = grpc.ServiceDesc{
	ServiceName: "SalamService",
	HandlerType: (*SalamServiceServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "Sapa",
			Handler:    _SalamService_Sapa_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "hello.proto",
}
